useDynLib(CIDnetworks)
importFrom(Rcpp, evalCpp)
importFrom(R6, R6Class)
importFrom(msm, rtnorm)
importFrom(mvtnorm, rmvnorm)
importFrom(mvtnorm, dmvnorm)
importFrom(mvtnorm, pmvnorm)
importFrom("methods", show)
importFrom(igraph, graph.edgelist)
importFrom(igraph, plot.igraph)
importFrom(numDeriv, grad)
importFrom(numDeriv, hessian)
importFrom(MASS,kde2d)
importFrom("grDevices", "colorRampPalette", "rgb")
importFrom("graphics", "abline", "arrows", "axis", "box", "lines",
           "pairs", "par", "points", "rect", "segments", "text")
importFrom("methods", "is", "new")
importFrom("stats", "pnorm", "princomp", "quantile", "rbinom",
           "rgamma", "rnorm")

#exportMethods()

#exportPattern("^[[:alpha:]]+")
# R6 exports
export(CIDGibbs, CIDGibbsOutput ,CIDnetwork, INTERCEPT)
#     	HBM,LSM,LVM,MMSBM,SBM,SR,BETA,
# 
#         unwrap.CID.Gibbs,
#         CID.metric,# 

        #list.output.to.matrices,

#         likelihood.plot,
#         intercept.plot,
#         COV.plot,
#         LSM.plot,
#         SBM.plot,
#         MMSBM.plot,
#         SR.plot,

export(network.plot, sociogram.plot)

#         n.nodes,edge.list,is.net.directed,net.density,
#         outcome,node.names,
#         inDegree,outDegree,socio,value.mat,value.mat.mean,
#         switcheroo,mat.cov.to.edge.list.cov, ##  add mans for these

#         l.diag, u.diag, ordinal.maker,
#         getModeLS
export(post.pred.mat,post.pred.apply,post.pred.mean)

# S3method (plot, CID.Gibbs)
# S3method (print, CID.Gibbs)
# S3method (summary, CID.Gibbs)
# S3method (print, summary.CID.Gibbs)
